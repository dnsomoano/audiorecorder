KCPSM6 Assembler log file for program 'C:\Users\Halberd\audiorecorder\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 02 May 2022
Assembly timestamp: 03:36:19

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 1E6 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 487
Memory locations available: 3609


Assembly listing

 Addr Code                        Instruction

 000                              ;================================================================
 000                              ; Port address definitions...
 000                              ;================================================================
 000                              CONSTANT switches, 00                        ; Switch read port
 000                              CONSTANT leds, 01                            ; LED write port
 000                              CONSTANT uart_data_rx, 02                    ; UART receive read port
 000                              CONSTANT uart_data_tx, 03                    ; UART transmit write port
 000                              CONSTANT data_present, 04                    ; UART stat read port, lsb
 000                              CONSTANT buffer_full, 05                     ; UART stat read port, lsb
 000                              CONSTANT fsm, 06
 000                              CONSTANT deletedall, 07
 000                              CONSTANT all_clear, 00                       ; define all clear
 000                              CONSTANT all_set, FF                         ; define all set
 000                              CONSTANT ascii_NUL, 00                       ; ascii code (null character)
 000                              CONSTANT ascii_SOH, 01                       ; ascii code (start of header)
 000                              CONSTANT ascii_STX, 02                       ; ascii code (start of text)
 000                              CONSTANT ascii_ETX, 03                       ; ascii code (end of text)
 000                              CONSTANT ascii_EOT, 04                       ; ascii code (end of xmit)
 000                              CONSTANT ascii_ENQ, 05                       ; ascii code (enquiry)
 000                              CONSTANT ascii_ACK, 06                       ; ascii code (acknowledge)
 000                              CONSTANT ascii_BEL, 07                       ; ascii code (bell)
 000                              CONSTANT ascii_BS, 08                        ; ascii code (backspace)
 000                              CONSTANT ascii_HT, 09                        ; ascii code (horiz tab)
 000                              CONSTANT ascii_LF, 0A                        ; ascii code (line feed)
 000                              CONSTANT ascii_VT, 0B                        ; ascii code (vert tab)
 000                              CONSTANT ascii_FF, 0C                        ; ascii code (form feed)
 000                              CONSTANT ascii_CR, 0D                        ; ascii code (carriage return)
 000                              CONSTANT ascii_SO, 0E                        ; ascii code (shift out)
 000                              CONSTANT ascii_SI, 0F                        ; ascii code (shift in)
 000                              CONSTANT ascii_DLE, 10                       ; ascii code (data link esc)
 000                              CONSTANT ascii_DC1, 11                       ; ascii code (device ctrl 1, xon)
 000                              CONSTANT ascii_DC2, 12                       ; ascii code (device ctrl 2)
 000                              CONSTANT ascii_DC3, 13                       ; ascii code (device ctrl 3, xoff)
 000                              CONSTANT ascii_DC4, 14                       ; ascii code (device ctrl 4)
 000                              CONSTANT ascii_NAK, 15                       ; ascii code (negative acknowledge)
 000                              CONSTANT ascii_SYN, 16                       ; ascii code (sync idle)
 000                              CONSTANT ascii_ETB, 17                       ; ascii code (end xmit block)
 000                              CONSTANT ascii_CAN, 18                       ; ascii code (cancel)
 000                              CONSTANT ascii_EM, 19                        ; ascii code (end of medium)
 000                              CONSTANT ascii_SUB, 1A                       ; ascii code (substitute)
 000                              CONSTANT ascii_ESC, 1B                       ; ascii code (escape)
 000                              CONSTANT ascii_FS, 1C                        ; ascii code (file separator)
 000                              CONSTANT ascii_GS, 1D                        ; ascii code (group separator)
 000                              CONSTANT ascii_RS, 1E                        ; ascii code (record separator)
 000                              CONSTANT ascii_US, 1F                        ; ascii code (unit space)
 000                              CONSTANT ascii_SPACE, 20                     ; ascii code
 000                              CONSTANT ascii_EXCLAIM, 21                   ; ascii code
 000                              CONSTANT ascii_DBLQUOT, 22                   ; ascii code
 000                              CONSTANT ascii_NUMSIGN, 23                   ; ascii code
 000                              CONSTANT ascii_DOLLAR, 24                    ; ascii code
 000                              CONSTANT ascii_PERCENT, 25                   ; ascii code
 000                              CONSTANT ascii_AMP, 26                       ; ascii code
 000                              CONSTANT ascii_SINQUOT, 27                   ; ascii code
 000                              CONSTANT ascii_LPAREN, 28                    ; ascii code
 000                              CONSTANT ascii_RPAREN, 29                    ; ascii code
 000                              CONSTANT ascii_ASTERISK, 2A                  ; ascii code
 000                              CONSTANT ascii_PLUS, 2B                      ; ascii code
 000                              CONSTANT ascii_COMMA, 2C                     ; ascii code
 000                              CONSTANT ascii_MINUS, 2D                     ; ascii code
 000                              CONSTANT ascii_PERIOD, 2E                    ; ascii code
 000                              CONSTANT ascii_FWDSLASH, 2F                  ; ascii code
 000                              CONSTANT ascii_0, 30                         ; ascii code
 000                              CONSTANT ascii_1, 31                         ; ascii code
 000                              CONSTANT ascii_2, 32                         ; ascii code
 000                              CONSTANT ascii_3, 33                         ; ascii code
 000                              CONSTANT ascii_4, 34                         ; ascii code
 000                              CONSTANT ascii_5, 35                         ; ascii code
 000                              CONSTANT ascii_6, 36                         ; ascii code
 000                              CONSTANT ascii_7, 37                         ; ascii code
 000                              CONSTANT ascii_8, 38                         ; ascii code
 000                              CONSTANT ascii_9, 39                         ; ascii code
 000                              CONSTANT ascii_COLON, 3A                     ; ascii code
 000                              CONSTANT ascii_SEMI, 3B                      ; ascii code
 000                              CONSTANT ascii_LESS, 3C                      ; ascii code
 000                              CONSTANT ascii_EQUAL, 3D                     ; ascii code
 000                              CONSTANT ascii_GREATER, 3E                   ; ascii code
 000                              CONSTANT ascii_QUESTION, 3F                  ; ascii code
 000                              CONSTANT ascii_CIRCAT, 40                    ; ascii code
 000                              CONSTANT ascii_A, 41                         ; ascii code
 000                              CONSTANT ascii_B, 42                         ; ascii code
 000                              CONSTANT ascii_C, 43                         ; ascii code
 000                              CONSTANT ascii_D, 44                         ; ascii code
 000                              CONSTANT ascii_E, 45                         ; ascii code
 000                              CONSTANT ascii_F, 46                         ; ascii code
 000                              CONSTANT ascii_G, 47                         ; ascii code
 000                              CONSTANT ascii_H, 48                         ; ascii code
 000                              CONSTANT ascii_I, 49                         ; ascii code
 000                              CONSTANT ascii_J, 4A                         ; ascii code
 000                              CONSTANT ascii_K, 4B                         ; ascii code
 000                              CONSTANT ascii_L, 4C                         ; ascii code
 000                              CONSTANT ascii_M, 4D                         ; ascii code
 000                              CONSTANT ascii_N, 4E                         ; ascii code
 000                              CONSTANT ascii_O, 4F                         ; ascii code
 000                              CONSTANT ascii_P, 50                         ; ascii code
 000                              CONSTANT ascii_Q, 51                         ; ascii code
 000                              CONSTANT ascii_R, 52                         ; ascii code
 000                              CONSTANT ascii_S, 53                         ; ascii code
 000                              CONSTANT ascii_T, 54                         ; ascii code
 000                              CONSTANT ascii_U, 55                         ; ascii code
 000                              CONSTANT ascii_V, 56                         ; ascii code
 000                              CONSTANT ascii_W, 57                         ; ascii code
 000                              CONSTANT ascii_X, 58                         ; ascii code
 000                              CONSTANT ascii_Y, 59                         ; ascii code
 000                              CONSTANT ascii_Z, 5A                         ; ascii code
 000                              CONSTANT ascii_LBKT, 5B                      ; ascii code
 000                              CONSTANT ascii_BKSLASH, 5C                   ; ascii code
 000                              CONSTANT ascii_RBKT, 5D                      ; ascii code
 000                              CONSTANT ascii_CARET, 5E                     ; ascii code
 000                              CONSTANT ascii_UNDER, 5F                     ; ascii code
 000                              CONSTANT ascii_TICK, 60                      ; ascii code
 000                              CONSTANT ascii_a, 61                         ; ascii code
 000                              CONSTANT ascii_b, 62                         ; ascii code
 000                              CONSTANT ascii_c, 63                         ; ascii code
 000                              CONSTANT ascii_d, 64                         ; ascii code
 000                              CONSTANT ascii_e, 65                         ; ascii code
 000                              CONSTANT ascii_f, 66                         ; ascii code
 000                              CONSTANT ascii_g, 67                         ; ascii code
 000                              CONSTANT ascii_h, 68                         ; ascii code
 000                              CONSTANT ascii_i, 69                         ; ascii code
 000                              CONSTANT ascii_j, 6A                         ; ascii code
 000                              CONSTANT ascii_k, 6B                         ; ascii code
 000                              CONSTANT ascii_l, 6C                         ; ascii code
 000                              CONSTANT ascii_m, 6D                         ; ascii code
 000                              CONSTANT ascii_n, 6E                         ; ascii code
 000                              CONSTANT ascii_o, 6F                         ; ascii code
 000                              CONSTANT ascii_p, 70                         ; ascii code
 000                              CONSTANT ascii_q, 71                         ; ascii code
 000                              CONSTANT ascii_r, 72                         ; ascii code
 000                              CONSTANT ascii_s, 73                         ; ascii code
 000                              CONSTANT ascii_t, 74                         ; ascii code
 000                              CONSTANT ascii_u, 75                         ; ascii code
 000                              CONSTANT ascii_v, 76                         ; ascii code
 000                              CONSTANT ascii_w, 77                         ; ascii code
 000                              CONSTANT ascii_x, 78                         ; ascii code
 000                              CONSTANT ascii_y, 79                         ; ascii code
 000                              CONSTANT ascii_z, 7A                         ; ascii code
 000                              CONSTANT ascii_LBRACE, 7B                    ; ascii code
 000                              CONSTANT ascii_VBAR, 7C                      ; ascii code
 000                              CONSTANT ascii_RBRACE, 7D                    ; ascii code
 000                              CONSTANT ascii_TILDE, 7E                     ; ascii code
 000                              CONSTANT ascii_DEL, 7F                       ; ascii code
 000                              NAMEREG s0, cur_char
 000                              NAMEREG s1, cur_char_addr
 000                              NAMEREG s2, max_char
 000                              NAMEREG s3, buffer_full_in
 000                              NAMEREG s4, uart_data_rx_in
 000                              NAMEREG s5, data_present_in
 000                              NAMEREG s6, out_value
 000                              NAMEREG s7, pp
 000                              ;NAMEREG S4, delete_all_ack
 000                              ;NAMEREG S5, volume_control
 000                              ;NAMEREG S9, track_number
 000                              ;NAMEREG SA, playreg
 000                              ;NAMEREG SB, substate
 000                       start: 
 000  06000                       XOR s0[cur_char], s0[cur_char]
 001  01031                       LOAD s0[cur_char], 31[ascii_1]               ;"1"
 002  2F000                       STORE s0[cur_char], 00
 003  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]          ;"."
 004  2F001                       STORE s0[cur_char], 01
 005  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]          ;")"
 006  2F002                       STORE s0[cur_char], 02
 007  01020                       LOAD s0[cur_char], 20[ascii_SPACE]           ;" "
 008  2F003                       STORE s0[cur_char], 03
 009  01050                       LOAD s0[cur_char], 50[ascii_P]
 00A  2F004                       STORE s0[cur_char], 04
 00B  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 00C  2F005                       STORE s0[cur_char], 05
 00D  01061                       LOAD s0[cur_char], 61[ascii_a]
 00E  2F006                       STORE s0[cur_char], 06
 00F  01079                       LOAD s0[cur_char], 79[ascii_y]
 010  2F007                       STORE s0[cur_char], 07
 011  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 012  2F008                       STORE s0[cur_char], 08
 013  01041                       LOAD s0[cur_char], 41[ascii_A]
 014  2F009                       STORE s0[cur_char], 09
 015  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 016  2F00A                       STORE s0[cur_char], 0A
 017  0106D                       LOAD s0[cur_char], 6D[ascii_m]
 018  2F00B                       STORE s0[cur_char], 0B
 019  01065                       LOAD s0[cur_char], 65[ascii_e]
 01A  2F00C                       STORE s0[cur_char], 0C
 01B  01073                       LOAD s0[cur_char], 73[ascii_s]
 01C  2F00D                       STORE s0[cur_char], 0D
 01D  01073                       LOAD s0[cur_char], 73[ascii_s]
 01E  2F00E                       STORE s0[cur_char], 0E
 01F  01061                       LOAD s0[cur_char], 61[ascii_a]
 020  2F00F                       STORE s0[cur_char], 0F
 021  01067                       LOAD s0[cur_char], 67[ascii_g]
 022  2F010                       STORE s0[cur_char], 10
 023  01065                       LOAD s0[cur_char], 65[ascii_e]
 024  2F011                       STORE s0[cur_char], 11
 025  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 026  2F012                       STORE s0[cur_char], 12
 027  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 028  2F013                       STORE s0[cur_char], 13
 029  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 02A  2F014                       STORE s0[cur_char], 14
 02B  01032                       LOAD s0[cur_char], 32[ascii_2]
 02C  2F015                       STORE s0[cur_char], 15
 02D  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 02E  2F016                       STORE s0[cur_char], 16
 02F  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]
 030  2F017                       STORE s0[cur_char], 17
 031  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 032  2F018                       STORE s0[cur_char], 18
 033  01052                       LOAD s0[cur_char], 52[ascii_R]
 034  2F019                       STORE s0[cur_char], 19
 035  01065                       LOAD s0[cur_char], 65[ascii_e]
 036  2F01A                       STORE s0[cur_char], 1A
 037  01063                       LOAD s0[cur_char], 63[ascii_c]
 038  2F01B                       STORE s0[cur_char], 1B
 039  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 03A  2F01C                       STORE s0[cur_char], 1C
 03B  01072                       LOAD s0[cur_char], 72[ascii_r]
 03C  2F01D                       STORE s0[cur_char], 1D
 03D  01064                       LOAD s0[cur_char], 64[ascii_d]
 03E  2F01E                       STORE s0[cur_char], 1E
 03F  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 040  2F01F                       STORE s0[cur_char], 1F
 041  01061                       LOAD s0[cur_char], 61[ascii_a]
 042  2F020                       STORE s0[cur_char], 20
 043  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 044  2F021                       STORE s0[cur_char], 21
 045  0106D                       LOAD s0[cur_char], 6D[ascii_m]
 046  2F022                       STORE s0[cur_char], 22
 047  01065                       LOAD s0[cur_char], 65[ascii_e]
 048  2F023                       STORE s0[cur_char], 23
 049  01073                       LOAD s0[cur_char], 73[ascii_s]
 04A  2F024                       STORE s0[cur_char], 24
 04B  01073                       LOAD s0[cur_char], 73[ascii_s]
 04C  2F025                       STORE s0[cur_char], 25
 04D  01061                       LOAD s0[cur_char], 61[ascii_a]
 04E  2F026                       STORE s0[cur_char], 26
 04F  01067                       LOAD s0[cur_char], 67[ascii_g]
 050  2F027                       STORE s0[cur_char], 27
 051  01065                       LOAD s0[cur_char], 65[ascii_e]
 052  2F028                       STORE s0[cur_char], 28
 053  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 054  2F029                       STORE s0[cur_char], 29
 055  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 056  2F02A                       STORE s0[cur_char], 2A
 057  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 058  2F02B                       STORE s0[cur_char], 2B
 059  0122C                       LOAD s2[max_char], 2C
 05A  201DA                       CALL 1DA[SENDMENU]
 05B  06000                       XOR s0[cur_char], s0[cur_char]
 05C  01033                       LOAD s0[cur_char], 33[ascii_3]               ;
 05D  2F000                       STORE s0[cur_char], 00
 05E  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]          ;
 05F  2F001                       STORE s0[cur_char], 01
 060  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]          ;
 061  2F002                       STORE s0[cur_char], 02
 062  01020                       LOAD s0[cur_char], 20[ascii_SPACE]           ;
 063  2F003                       STORE s0[cur_char], 03
 064  01044                       LOAD s0[cur_char], 44[ascii_D]
 065  2F004                       STORE s0[cur_char], 04
 066  01065                       LOAD s0[cur_char], 65[ascii_e]
 067  2F005                       STORE s0[cur_char], 05
 068  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 069  2F006                       STORE s0[cur_char], 06
 06A  01065                       LOAD s0[cur_char], 65[ascii_e]
 06B  2F007                       STORE s0[cur_char], 07
 06C  01074                       LOAD s0[cur_char], 74[ascii_t]
 06D  2F008                       STORE s0[cur_char], 08
 06E  01065                       LOAD s0[cur_char], 65[ascii_e]
 06F  2F009                       STORE s0[cur_char], 09
 070  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 071  2F00A                       STORE s0[cur_char], 0A
 072  01061                       LOAD s0[cur_char], 61[ascii_a]
 073  2F00B                       STORE s0[cur_char], 0B
 074  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 075  2F00C                       STORE s0[cur_char], 0C
 076  0106D                       LOAD s0[cur_char], 6D[ascii_m]
 077  2F00D                       STORE s0[cur_char], 0D
 078  01065                       LOAD s0[cur_char], 65[ascii_e]
 079  2F00E                       STORE s0[cur_char], 0E
 07A  01073                       LOAD s0[cur_char], 73[ascii_s]
 07B  2F00F                       STORE s0[cur_char], 0F
 07C  01073                       LOAD s0[cur_char], 73[ascii_s]
 07D  2F010                       STORE s0[cur_char], 10
 07E  01061                       LOAD s0[cur_char], 61[ascii_a]
 07F  2F011                       STORE s0[cur_char], 11
 080  01067                       LOAD s0[cur_char], 67[ascii_g]
 081  2F012                       STORE s0[cur_char], 12
 082  01065                       LOAD s0[cur_char], 65[ascii_e]
 083  2F013                       STORE s0[cur_char], 13
 084  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 085  2F014                       STORE s0[cur_char], 14
 086  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 087  2F015                       STORE s0[cur_char], 15
 088  01034                       LOAD s0[cur_char], 34[ascii_4]
 089  2F016                       STORE s0[cur_char], 16
 08A  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 08B  2F017                       STORE s0[cur_char], 17
 08C  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]
 08D  2F018                       STORE s0[cur_char], 18
 08E  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 08F  2F019                       STORE s0[cur_char], 19
 090  01044                       LOAD s0[cur_char], 44[ascii_D]
 091  2F01A                       STORE s0[cur_char], 1A
 092  01065                       LOAD s0[cur_char], 65[ascii_e]
 093  2F01B                       STORE s0[cur_char], 1B
 094  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 095  2F01C                       STORE s0[cur_char], 1C
 096  01065                       LOAD s0[cur_char], 65[ascii_e]
 097  2F01D                       STORE s0[cur_char], 1D
 098  01074                       LOAD s0[cur_char], 74[ascii_t]
 099  2F01E                       STORE s0[cur_char], 1E
 09A  01065                       LOAD s0[cur_char], 65[ascii_e]
 09B  2F01F                       STORE s0[cur_char], 1F
 09C  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 09D  2F020                       STORE s0[cur_char], 20
 09E  01061                       LOAD s0[cur_char], 61[ascii_a]
 09F  2F021                       STORE s0[cur_char], 21
 0A0  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 0A1  2F022                       STORE s0[cur_char], 22
 0A2  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 0A3  2F023                       STORE s0[cur_char], 23
 0A4  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 0A5  2F024                       STORE s0[cur_char], 24
 0A6  0106D                       LOAD s0[cur_char], 6D[ascii_m]
 0A7  2F025                       STORE s0[cur_char], 25
 0A8  01065                       LOAD s0[cur_char], 65[ascii_e]
 0A9  2F026                       STORE s0[cur_char], 26
 0AA  01073                       LOAD s0[cur_char], 73[ascii_s]
 0AB  2F027                       STORE s0[cur_char], 27
 0AC  01073                       LOAD s0[cur_char], 73[ascii_s]
 0AD  2F028                       STORE s0[cur_char], 28
 0AE  01061                       LOAD s0[cur_char], 61[ascii_a]
 0AF  2F029                       STORE s0[cur_char], 29
 0B0  01067                       LOAD s0[cur_char], 67[ascii_g]
 0B1  2F02A                       STORE s0[cur_char], 2A
 0B2  01065                       LOAD s0[cur_char], 65[ascii_e]
 0B3  2F02B                       STORE s0[cur_char], 2B
 0B4  01073                       LOAD s0[cur_char], 73[ascii_s]
 0B5  2F02C                       STORE s0[cur_char], 2C
 0B6  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 0B7  2F02D                       STORE s0[cur_char], 2D
 0B8  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 0B9  2F02E                       STORE s0[cur_char], 2E
 0BA  0122F                       LOAD s2[max_char], 2F
 0BB  201DA                       CALL 1DA[SENDMENU]
 0BC  06000                       XOR s0[cur_char], s0[cur_char]
 0BD  01035                       LOAD s0[cur_char], 35[ascii_5]               ;
 0BE  2F000                       STORE s0[cur_char], 00
 0BF  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]          ;
 0C0  2F001                       STORE s0[cur_char], 01
 0C1  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]          ;
 0C2  2F002                       STORE s0[cur_char], 02
 0C3  01020                       LOAD s0[cur_char], 20[ascii_SPACE]           ;
 0C4  2F003                       STORE s0[cur_char], 03
 0C5  01056                       LOAD s0[cur_char], 56[ascii_V]
 0C6  2F004                       STORE s0[cur_char], 04
 0C7  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 0C8  2F005                       STORE s0[cur_char], 05
 0C9  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 0CA  2F006                       STORE s0[cur_char], 06
 0CB  01075                       LOAD s0[cur_char], 75[ascii_u]
 0CC  2F007                       STORE s0[cur_char], 07
 0CD  0106D                       LOAD s0[cur_char], 6D[ascii_m]
 0CE  2F008                       STORE s0[cur_char], 08
 0CF  01065                       LOAD s0[cur_char], 65[ascii_e]
 0D0  2F009                       STORE s0[cur_char], 09
 0D1  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 0D2  2F00A                       STORE s0[cur_char], 0A
 0D3  01063                       LOAD s0[cur_char], 63[ascii_c]
 0D4  2F00B                       STORE s0[cur_char], 0B
 0D5  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 0D6  2F00C                       STORE s0[cur_char], 0C
 0D7  0106E                       LOAD s0[cur_char], 6E[ascii_n]
 0D8  2F00D                       STORE s0[cur_char], 0D
 0D9  01074                       LOAD s0[cur_char], 74[ascii_t]
 0DA  2F00E                       STORE s0[cur_char], 0E
 0DB  01072                       LOAD s0[cur_char], 72[ascii_r]
 0DC  2F00F                       STORE s0[cur_char], 0F
 0DD  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 0DE  2F010                       STORE s0[cur_char], 10
 0DF  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 0E0  2F011                       STORE s0[cur_char], 11
 0E1  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 0E2  2F012                       STORE s0[cur_char], 12
 0E3  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 0E4  2F013                       STORE s0[cur_char], 13
 0E5  01214                       LOAD s2[max_char], 14
 0E6  201DA                       CALL 1DA[SENDMENU]
 0E7  22180                       JUMP 180[await_input]
 0E8                  recordmenu: 
 0E8  06000                       XOR s0[cur_char], s0[cur_char]
 0E9  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 0EA  2F000                       STORE s0[cur_char], 00
 0EB  01052                       LOAD s0[cur_char], 52[ascii_R]
 0EC  2F001                       STORE s0[cur_char], 01
 0ED  01065                       LOAD s0[cur_char], 65[ascii_e]
 0EE  2F002                       STORE s0[cur_char], 02
 0EF  01063                       LOAD s0[cur_char], 63[ascii_c]
 0F0  2F003                       STORE s0[cur_char], 03
 0F1  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 0F2  2F004                       STORE s0[cur_char], 04
 0F3  01072                       LOAD s0[cur_char], 72[ascii_r]
 0F4  2F005                       STORE s0[cur_char], 05
 0F5  01064                       LOAD s0[cur_char], 64[ascii_d]
 0F6  2F006                       STORE s0[cur_char], 06
 0F7  01069                       LOAD s0[cur_char], 69[ascii_i]
 0F8  2F007                       STORE s0[cur_char], 07
 0F9  0106E                       LOAD s0[cur_char], 6E[ascii_n]
 0FA  2F008                       STORE s0[cur_char], 08
 0FB  01067                       LOAD s0[cur_char], 67[ascii_g]
 0FC  2F009                       STORE s0[cur_char], 09
 0FD  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 0FE  2F00A                       STORE s0[cur_char], 0A
 0FF  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 100  2F00B                       STORE s0[cur_char], 0B
 101  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 102  2F00C                       STORE s0[cur_char], 0C
 103  01031                       LOAD s0[cur_char], 31[ascii_1]
 104  2F00D                       STORE s0[cur_char], 0D
 105  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 106  2F00E                       STORE s0[cur_char], 0E
 107  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]
 108  2F00F                       STORE s0[cur_char], 0F
 109  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 10A  2F010                       STORE s0[cur_char], 10
 10B  01053                       LOAD s0[cur_char], 53[ascii_S]
 10C  2F011                       STORE s0[cur_char], 11
 10D  01074                       LOAD s0[cur_char], 74[ascii_t]
 10E  2F012                       STORE s0[cur_char], 12
 10F  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 110  2F013                       STORE s0[cur_char], 13
 111  01070                       LOAD s0[cur_char], 70[ascii_p]
 112  2F014                       STORE s0[cur_char], 14
 113  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 114  2F015                       STORE s0[cur_char], 15
 115  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 116  2F016                       STORE s0[cur_char], 16
 117  01217                       LOAD s2[max_char], 17
 118  201DA                       CALL 1DA[SENDMENU]
 119  25000                       RETURN 
 11A                    playmenu: 
 11A  06000                       XOR s0[cur_char], s0[cur_char]
 11B  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 11C  2F000                       STORE s0[cur_char], 00
 11D  01050                       LOAD s0[cur_char], 50[ascii_P]
 11E  2F001                       STORE s0[cur_char], 01
 11F  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 120  2F002                       STORE s0[cur_char], 02
 121  01061                       LOAD s0[cur_char], 61[ascii_a]
 122  2F003                       STORE s0[cur_char], 03
 123  01079                       LOAD s0[cur_char], 79[ascii_y]
 124  2F004                       STORE s0[cur_char], 04
 125  01069                       LOAD s0[cur_char], 69[ascii_i]
 126  2F005                       STORE s0[cur_char], 05
 127  0106E                       LOAD s0[cur_char], 6E[ascii_n]
 128  2F006                       STORE s0[cur_char], 06
 129  01067                       LOAD s0[cur_char], 67[ascii_g]
 12A  2F007                       STORE s0[cur_char], 07
 12B  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 12C  2F008                       STORE s0[cur_char], 08
 12D  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 12E  2F009                       STORE s0[cur_char], 09
 12F  01031                       LOAD s0[cur_char], 31[ascii_1]
 130  2F00A                       STORE s0[cur_char], 0A
 131  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 132  2F00B                       STORE s0[cur_char], 0B
 133  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]
 134  2F00C                       STORE s0[cur_char], 0C
 135  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 136  2F00D                       STORE s0[cur_char], 0D
 137  01053                       LOAD s0[cur_char], 53[ascii_S]
 138  2F00E                       STORE s0[cur_char], 0E
 139  01074                       LOAD s0[cur_char], 74[ascii_t]
 13A  2F00F                       STORE s0[cur_char], 0F
 13B  0106F                       LOAD s0[cur_char], 6F[ascii_o]
 13C  2F010                       STORE s0[cur_char], 10
 13D  01070                       LOAD s0[cur_char], 70[ascii_p]
 13E  2F011                       STORE s0[cur_char], 11
 13F  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 140  2F012                       STORE s0[cur_char], 12
 141  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 142  2F013                       STORE s0[cur_char], 13
 143  01032                       LOAD s0[cur_char], 32[ascii_2]
 144  2F014                       STORE s0[cur_char], 14
 145  0102E                       LOAD s0[cur_char], 2E[ascii_PERIOD]
 146  2F015                       STORE s0[cur_char], 15
 147  01029                       LOAD s0[cur_char], 29[ascii_RPAREN]
 148  2F016                       STORE s0[cur_char], 16
 149  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 14A  2F017                       STORE s0[cur_char], 17
 14B  01050                       LOAD s0[cur_char], 50[ascii_P]
 14C  2F018                       STORE s0[cur_char], 18
 14D  01061                       LOAD s0[cur_char], 61[ascii_a]
 14E  2F019                       STORE s0[cur_char], 19
 14F  01075                       LOAD s0[cur_char], 75[ascii_u]
 150  2F01A                       STORE s0[cur_char], 1A
 151  01073                       LOAD s0[cur_char], 73[ascii_s]
 152  2F01B                       STORE s0[cur_char], 1B
 153  01065                       LOAD s0[cur_char], 65[ascii_e]
 154  2F01C                       STORE s0[cur_char], 1C
 155  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 156  2F01D                       STORE s0[cur_char], 1D
 157  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 158  2F01E                       STORE s0[cur_char], 1E
 159  0121F                       LOAD s2[max_char], 1F
 15A  201DA                       CALL 1DA[SENDMENU]
 15B  25000                       RETURN 
 15C                 deletestart: 
 15C  06000                       XOR s0[cur_char], s0[cur_char]
 15D  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 15E  2F000                       STORE s0[cur_char], 00
 15F  01044                       LOAD s0[cur_char], 44[ascii_D]
 160  2F001                       STORE s0[cur_char], 01
 161  01065                       LOAD s0[cur_char], 65[ascii_e]
 162  2F002                       STORE s0[cur_char], 02
 163  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 164  2F003                       STORE s0[cur_char], 03
 165  01065                       LOAD s0[cur_char], 65[ascii_e]
 166  2F004                       STORE s0[cur_char], 04
 167  01074                       LOAD s0[cur_char], 74[ascii_t]
 168  2F005                       STORE s0[cur_char], 05
 169  01065                       LOAD s0[cur_char], 65[ascii_e]
 16A  2F006                       STORE s0[cur_char], 06
 16B  01064                       LOAD s0[cur_char], 64[ascii_d]
 16C  2F007                       STORE s0[cur_char], 07
 16D  01020                       LOAD s0[cur_char], 20[ascii_SPACE]
 16E  2F008                       STORE s0[cur_char], 08
 16F  01061                       LOAD s0[cur_char], 61[ascii_a]
 170  2F009                       STORE s0[cur_char], 09
 171  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 172  2F00A                       STORE s0[cur_char], 0A
 173  0106C                       LOAD s0[cur_char], 6C[ascii_l]
 174  2F00B                       STORE s0[cur_char], 0B
 175  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 176  2F00C                       STORE s0[cur_char], 0C
 177  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 178  2F00D                       STORE s0[cur_char], 0D
 179  0100D                       LOAD s0[cur_char], 0D[ascii_CR]
 17A  2F00E                       STORE s0[cur_char], 0E
 17B  0100A                       LOAD s0[cur_char], 0A[ascii_LF]
 17C  2F00F                       STORE s0[cur_char], 0F
 17D  01210                       LOAD s2[max_char], 10
 17E  201DA                       CALL 1DA[SENDMENU]
 17F  22000                       JUMP 000[start]
 180                 await_input: 
 180  06440                       XOR s4[uart_data_rx_in], s4[uart_data_rx_in]
 181  06550                       XOR s5[data_present_in], s5[data_present_in]
 182  09504                       INPUT s5[data_present_in], 04[data_present]
 183  09402                       INPUT s4[uart_data_rx_in], 02[uart_data_rx]
 184  1D501                       COMPARE s5[data_present_in], 01
 185  36180                       JUMP NZ, 180[await_input]
 186  1D431                       COMPARE s4[uart_data_rx_in], 31[ascii_1]
 187  321A5                       JUMP Z, 1A5[play_message]
 188  1D432                       COMPARE s4[uart_data_rx_in], 32[ascii_2]
 189  321AB                       JUMP Z, 1AB[record_message]
 18A  1D433                       COMPARE s4[uart_data_rx_in], 33[ascii_3]
 18B  321B0                       JUMP Z, 1B0[delete_message]
 18C  1D434                       COMPARE s4[uart_data_rx_in], 34[ascii_4]
 18D  321B3                       JUMP Z, 1B3[delete_all_messages]
 18E  1D435                       COMPARE s4[uart_data_rx_in], 35[ascii_5]
 18F  321B8                       JUMP Z, 1B8[volume]
 190  22180                       JUMP 180[await_input]
 191                 recordinput: 
 191  06000                       XOR s0[cur_char], s0[cur_char]
 192  06110                       XOR s1[cur_char_addr], s1[cur_char_addr]
 193  09504                       INPUT s5[data_present_in], 04[data_present]
 194  09402                       INPUT s4[uart_data_rx_in], 02[uart_data_rx]
 195  1D501                       COMPARE s5[data_present_in], 01
 196  36191                       JUMP NZ, 191[recordinput]
 197  1D431                       COMPARE s4[uart_data_rx_in], 31[ascii_1]
 198  321CA                       JUMP Z, 1CA[stoprecord]
 199  22191                       JUMP 191[recordinput]
 19A                   playinput: 
 19A  06000                       XOR s0[cur_char], s0[cur_char]
 19B  06110                       XOR s1[cur_char_addr], s1[cur_char_addr]
 19C  09504                       INPUT s5[data_present_in], 04[data_present]
 19D  09402                       INPUT s4[uart_data_rx_in], 02[uart_data_rx]
 19E  1D501                       COMPARE s5[data_present_in], 01
 19F  3619A                       JUMP NZ, 19A[playinput]
 1A0  1D431                       COMPARE s4[uart_data_rx_in], 31[ascii_1]
 1A1  321BB                       JUMP Z, 1BB[stop_playing]
 1A2  1D432                       COMPARE s4[uart_data_rx_in], 32[ascii_2]
 1A3  321C0                       JUMP Z, 1C0[pauseplay]
 1A4  2219A                       JUMP 19A[playinput]
 1A5                play_message: 
 1A5  01600                       LOAD s6[out_value], 00
 1A6  2D606                       OUTPUT s6[out_value], 06[fsm]
 1A7  201D3                       CALL 1D3[CLEARMENU]
 1A8  2011A                       CALL 11A[playmenu]
 1A9  09700                       INPUT s7[pp], 00
 1AA  2219A                       JUMP 19A[playinput]
 1AB              record_message: 
 1AB  01601                       LOAD s6[out_value], 01
 1AC  2D606                       OUTPUT s6[out_value], 06[fsm]
 1AD                              ;recording submenu, print out some stuff + let them know if cant record anymore
 1AD  201D3                       CALL 1D3[CLEARMENU]
 1AE  200E8                       CALL 0E8[recordmenu]
 1AF  22191                       JUMP 191[recordinput]
 1B0              delete_message: 
 1B0  01602                       LOAD s6[out_value], 02
 1B1  2D606                       OUTPUT s6[out_value], 06[fsm]
 1B2  22180                       JUMP 180[await_input]
 1B3         delete_all_messages: 
 1B3  01604                       LOAD s6[out_value], 04
 1B4  2D606                       OUTPUT s6[out_value], 06[fsm]
 1B5  201D3                       CALL 1D3[CLEARMENU]
 1B6  201CE                       CALL 1CE[del_all_confirm]
 1B7  2215C                       JUMP 15C[deletestart]
 1B8                      volume: 
 1B8  01605                       LOAD s6[out_value], 05
 1B9  2D606                       OUTPUT s6[out_value], 06[fsm]
 1BA  22180                       JUMP 180[await_input]
 1BB                stop_playing: 
 1BB  01700                       LOAD s7[pp], 00
 1BC  016FF                       LOAD s6[out_value], FF
 1BD  2D606                       OUTPUT s6[out_value], 06[fsm]
 1BE  201D3                       CALL 1D3[CLEARMENU]
 1BF  22000                       JUMP 000[start]
 1C0                   pauseplay: 
 1C0  077FF                       XOR s7[pp], FF
 1C1  1D7FF                       COMPARE s7[pp], FF
 1C2  321C4                       JUMP Z, 1C4[pauseaudio]
 1C3  221C7                       JUMP 1C7[playaudio]
 1C4                  pauseaudio: 
 1C4  01603                       LOAD s6[out_value], 03
 1C5  2D606                       OUTPUT s6[out_value], 06[fsm]
 1C6  2219A                       JUMP 19A[playinput]
 1C7                   playaudio: 
 1C7  01600                       LOAD s6[out_value], 00
 1C8  2D606                       OUTPUT s6[out_value], 06[fsm]
 1C9  2219A                       JUMP 19A[playinput]
 1CA                  stoprecord: 
 1CA  016FF                       LOAD s6[out_value], FF
 1CB  2D606                       OUTPUT s6[out_value], 06[fsm]
 1CC  201D3                       CALL 1D3[CLEARMENU]
 1CD  22000                       JUMP 000[start]
 1CE             del_all_confirm: 
 1CE  06000                       XOR s0[cur_char], s0[cur_char]
 1CF  09007                       INPUT s0[cur_char], 07[deletedall]
 1D0  1D001                       COMPARE s0[cur_char], 01
 1D1  361CE                       JUMP NZ, 1CE[del_all_confirm]
 1D2  25000                       RETURN 
 1D3                   CLEARMENU: 
 1D3  0100C                       LOAD s0[cur_char], 0C[ascii_FF]
 1D4  2F000                       STORE s0[cur_char], 00
 1D5  0101B                       LOAD s0[cur_char], 1B[ascii_ESC]
 1D6  2F001                       STORE s0[cur_char], 01
 1D7  01203                       LOAD s2[max_char], 03
 1D8  201DA                       CALL 1DA[SENDMENU]
 1D9  25000                       RETURN 
 1DA                    SENDMENU: 
 1DA  06000                       XOR s0[cur_char], s0[cur_char]
 1DB  06110                       XOR s1[cur_char_addr], s1[cur_char_addr]
 1DC                  bufferfull: 
 1DC  06330                       XOR s3[buffer_full_in], s3[buffer_full_in]
 1DD                 next_letter: 
 1DD  09305                       INPUT s3[buffer_full_in], 05[buffer_full]
 1DE  1D301                       COMPARE s3[buffer_full_in], 01
 1DF  321DC                       JUMP Z, 1DC[bufferfull]
 1E0  0A010                       FETCH s0[cur_char], (s1[cur_char_addr])
 1E1  11101                       ADD s1[cur_char_addr], 01
 1E2  2D003                       OUTPUT s0[cur_char], 03[uart_data_tx]
 1E3  1C120                       COMPARE s1[cur_char_addr], s2[max_char]
 1E4  361DD                       JUMP NZ, 1DD[next_letter]
 1E5  06220                       XOR s2[max_char], s2[max_char]
 1E6  25000                       RETURN 


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\Halberd\audiorecorder\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   03'd         
 timestamp_minutes 36'd         
 timestamp_seconds 19'd         
 datestamp_year    22'd         
 datestamp_month   5'd          
 datestamp_day     02'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           program.psm
 leds              01           program.psm
 uart_data_rx      02           program.psm
 uart_data_tx      03           program.psm
 data_present      04           program.psm
 buffer_full       05           program.psm
 fsm               06           program.psm
 deletedall        07           program.psm
 all_clear         00           program.psm
 all_set           FF           program.psm
 ascii_NUL         00           program.psm
 ascii_SOH         01           program.psm
 ascii_STX         02           program.psm
 ascii_ETX         03           program.psm
 ascii_EOT         04           program.psm
 ascii_ENQ         05           program.psm
 ascii_ACK         06           program.psm
 ascii_BEL         07           program.psm
 ascii_BS          08           program.psm
 ascii_HT          09           program.psm
 ascii_LF          0A           program.psm
 ascii_VT          0B           program.psm
 ascii_FF          0C           program.psm
 ascii_CR          0D           program.psm
 ascii_SO          0E           program.psm
 ascii_SI          0F           program.psm
 ascii_DLE         10           program.psm
 ascii_DC1         11           program.psm
 ascii_DC2         12           program.psm
 ascii_DC3         13           program.psm
 ascii_DC4         14           program.psm
 ascii_NAK         15           program.psm
 ascii_SYN         16           program.psm
 ascii_ETB         17           program.psm
 ascii_CAN         18           program.psm
 ascii_EM          19           program.psm
 ascii_SUB         1A           program.psm
 ascii_ESC         1B           program.psm
 ascii_FS          1C           program.psm
 ascii_GS          1D           program.psm
 ascii_RS          1E           program.psm
 ascii_US          1F           program.psm
 ascii_SPACE       20           program.psm
 ascii_EXCLAIM     21           program.psm
 ascii_DBLQUOT     22           program.psm
 ascii_NUMSIGN     23           program.psm
 ascii_DOLLAR      24           program.psm
 ascii_PERCENT     25           program.psm
 ascii_AMP         26           program.psm
 ascii_SINQUOT     27           program.psm
 ascii_LPAREN      28           program.psm
 ascii_RPAREN      29           program.psm
 ascii_ASTERISK    2A           program.psm
 ascii_PLUS        2B           program.psm
 ascii_COMMA       2C           program.psm
 ascii_MINUS       2D           program.psm
 ascii_PERIOD      2E           program.psm
 ascii_FWDSLASH    2F           program.psm
 ascii_0           30           program.psm
 ascii_1           31           program.psm
 ascii_2           32           program.psm
 ascii_3           33           program.psm
 ascii_4           34           program.psm
 ascii_5           35           program.psm
 ascii_6           36           program.psm
 ascii_7           37           program.psm
 ascii_8           38           program.psm
 ascii_9           39           program.psm
 ascii_COLON       3A           program.psm
 ascii_SEMI        3B           program.psm
 ascii_LESS        3C           program.psm
 ascii_EQUAL       3D           program.psm
 ascii_GREATER     3E           program.psm
 ascii_QUESTION    3F           program.psm
 ascii_CIRCAT      40           program.psm
 ascii_A           41           program.psm
 ascii_B           42           program.psm
 ascii_C           43           program.psm
 ascii_D           44           program.psm
 ascii_E           45           program.psm
 ascii_F           46           program.psm
 ascii_G           47           program.psm
 ascii_H           48           program.psm
 ascii_I           49           program.psm
 ascii_J           4A           program.psm
 ascii_K           4B           program.psm
 ascii_L           4C           program.psm
 ascii_M           4D           program.psm
 ascii_N           4E           program.psm
 ascii_O           4F           program.psm
 ascii_P           50           program.psm
 ascii_Q           51           program.psm
 ascii_R           52           program.psm
 ascii_S           53           program.psm
 ascii_T           54           program.psm
 ascii_U           55           program.psm
 ascii_V           56           program.psm
 ascii_W           57           program.psm
 ascii_X           58           program.psm
 ascii_Y           59           program.psm
 ascii_Z           5A           program.psm
 ascii_LBKT        5B           program.psm
 ascii_BKSLASH     5C           program.psm
 ascii_RBKT        5D           program.psm
 ascii_CARET       5E           program.psm
 ascii_UNDER       5F           program.psm
 ascii_TICK        60           program.psm
 ascii_a           61           program.psm
 ascii_b           62           program.psm
 ascii_c           63           program.psm
 ascii_d           64           program.psm
 ascii_e           65           program.psm
 ascii_f           66           program.psm
 ascii_g           67           program.psm
 ascii_h           68           program.psm
 ascii_i           69           program.psm
 ascii_j           6A           program.psm
 ascii_k           6B           program.psm
 ascii_l           6C           program.psm
 ascii_m           6D           program.psm
 ascii_n           6E           program.psm
 ascii_o           6F           program.psm
 ascii_p           70           program.psm
 ascii_q           71           program.psm
 ascii_r           72           program.psm
 ascii_s           73           program.psm
 ascii_t           74           program.psm
 ascii_u           75           program.psm
 ascii_v           76           program.psm
 ascii_w           77           program.psm
 ascii_x           78           program.psm
 ascii_y           79           program.psm
 ascii_z           7A           program.psm
 ascii_LBRACE      7B           program.psm
 ascii_VBAR        7C           program.psm
 ascii_RBRACE      7D           program.psm
 ascii_TILDE       7E           program.psm
 ascii_DEL         7F           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "02 May 2022"  
 timestamp$        "03:36:19"     



List of line labels

   Label                 Addr  Source PSM File

   start                 000   program.psm
   recordmenu            0E8   program.psm
   playmenu              11A   program.psm
   deletestart           15C   program.psm
   await_input           180   program.psm
   recordinput           191   program.psm
   playinput             19A   program.psm
   play_message          1A5   program.psm
   record_message        1AB   program.psm
   delete_message        1B0   program.psm
   delete_all_messages   1B3   program.psm
   volume                1B8   program.psm
   stop_playing          1BB   program.psm
   pauseplay             1C0   program.psm
   pauseaudio            1C4   program.psm
   playaudio             1C7   program.psm
   stoprecord            1CA   program.psm
   del_all_confirm       1CE   program.psm
   CLEARMENU             1D3   program.psm
   SENDMENU              1DA   program.psm
   bufferfull            1DC   program.psm
   next_letter           1DD   program.psm



Instruction usage statistics

 Instruction    Instances

 LOAD            200
 STAR              -

 AND               -
 OR                -
 XOR              18

 ADD               1
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          15
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             9
 OUTPUT           10
 OUTPUTK           -

 STORE             1
 FETCH             1

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             30
 JUMP@             -
 CALL             15
 CALL@             -
 RETURN            5
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
